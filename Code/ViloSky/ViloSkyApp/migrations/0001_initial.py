# Generated by Django 3.1.4 on 2021-03-19 12:45

import cuser.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('input_type', models.CharField(choices=[('DROPDOWN', 'Dropdown'), ('TEXT', 'Text'), ('TEXTAREA', 'Textarea'), ('CHECKBOX', 'Checkbox'), ('RADIOBUTTONS', 'Radiobuttons')], max_length=255)),
                ('is_required', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Paragraph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('static_text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField()),
                ('paragraphs', models.ManyToManyField(related_name='reports_included_in', to='ViloSkyApp.Paragraph')),
            ],
        ),
        migrations.CreateModel(
            name='CheckboxAdminInput',
            fields=[
                ('admin_input', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ViloSkyApp.admininput')),
                ('default_value', models.BooleanField(default=False)),
            ],
            bases=('ViloSkyApp.admininput',),
        ),
        migrations.CreateModel(
            name='DropdownAdminInput',
            fields=[
                ('admin_input', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ViloSkyApp.admininput')),
                ('choices', models.JSONField()),
            ],
            bases=('ViloSkyApp.admininput',),
        ),
        migrations.CreateModel(
            name='RadioButtonsAdminInput',
            fields=[
                ('admin_input', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ViloSkyApp.admininput')),
                ('choices', models.JSONField()),
            ],
            bases=('ViloSkyApp.admininput',),
        ),
        migrations.CreateModel(
            name='TextAdminInput',
            fields=[
                ('admin_input', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ViloSkyApp.admininput')),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
            ],
            bases=('ViloSkyApp.admininput',),
        ),
        migrations.CreateModel(
            name='TextareaAdminInput',
            fields=[
                ('admin_input', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ViloSkyApp.admininput')),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
            ],
            bases=('ViloSkyApp.admininput',),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email address already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middle_names', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', cuser.models.CUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_vilosky_admin', models.BooleanField(default=False)),
                ('is_hr_representative', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('company', models.CharField(blank=True, max_length=255)),
                ('employment_sector', models.CharField(blank=True, max_length=255)),
                ('employment_status', models.CharField(blank=True, choices=[('Unemployed/Volunteer', 'Unemployed Or Volunteer'), ('Employed', 'Employed'), ('Self-Employed', 'Selfemployed'), ('Career Break', 'Career Break'), ('Retired', 'Retired')], max_length=255)),
                ('time_worked_in_industry', models.CharField(blank=True, choices=[('No experience', 'No Experience'), ('1-6 Months', 'One To Six Months'), ('7-12 Months', 'Seven To Twelve Months'), ('1-2 Years', 'One To Two Years'), ('3-5 Years', 'Three To Five Years'), ('5-10 Years', 'Five To Ten Years'), ('10+ Years', 'Ten Plus Years')], max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('is_completed', models.BooleanField(default=False)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_actions', to='ViloSkyApp.report')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(max_length=255)),
                ('time_spent_on_page', models.DurationField()),
                ('clicks_on_page', models.PositiveIntegerField()),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions_made', to='ViloSkyApp.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='report',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports_assigned', to='ViloSkyApp.userprofile'),
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=255)),
                ('subjects', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qualifications', to='ViloSkyApp.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='PartialInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('admin_input', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partial_inputs', to='ViloSkyApp.admininput')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partial_input_created', to='ViloSkyApp.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='paragraph',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paragraphs_created', to='ViloSkyApp.userprofile'),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('paragraph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='ViloSkyApp.paragraph')),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('score', models.IntegerField()),
                ('paragraph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keywords', to='ViloSkyApp.paragraph')),
            ],
        ),
        migrations.AddField(
            model_name='admininput',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_inputs_created', to='ViloSkyApp.userprofile'),
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('paragraph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='ViloSkyApp.paragraph')),
            ],
        ),
    ]
